[ilifu]
    # Set global limits for current ilifu cluster configuration
    TOTAL_NODES_LIMIT = 79
    CPUS_PER_NODE_LIMIT = 32
    NTASKS_PER_NODE_LIMIT = %(CPUS_PER_NODE_LIMIT)s
    MEM_PER_NODE_GB_LIMIT = 232 #237568 MB
    MEM_PER_NODE_GB_LIMIT_HIGHMEM = 480 #491520 MB
    ACCOUNTS = ['b03-idia-ag','b05-pipelines-ag']

    # Set global values for paths and file names
    LOG_DIR = 'logs'
    CALIB_SCRIPTS_DIR = 'crosscal_scripts'
    AUX_SCRIPTS_DIR = 'aux_scripts'
    SELFCAL_SCRIPTS_DIR = 'selfcal_scripts'
    CONFIG = 'default_config.txt'
    TMP_CONFIG = '.config.tmp'
    MASTER_SCRIPT = 'submit_pipeline.sh'

    # Set global values for field, crosscal and SLURM arguments copied to config file, and some of their default values
    FIELDS_CONFIG_KEYS = [
        'fluxfield','bpassfield','phasecalfield',
        'targetfields','extrafields'
        ]
    CROSSCAL_CONFIG_KEYS = [
        'minbaselines','chanbin','width','timeavg','createmms])',
        'keepmms','spw','nspw','calcrefant','refant','standard',
        'badants','badfreqranges'
        ]
    SELFCAL_CONFIG_KEYS = [
        'nloops','loop','cell','robust','imsize','wprojplanes',
        'niter','threshold','uvrange','nterms','gridder','deconvolver',
        'solint','calmode','discard_nloops','gaintype',
        'outlier_threshold','flag'
        ]
    IMAGING_CONFIG_KEYS = [
        'cell', 'robust', 'imsize', 'wprojplanes', 'niter',
        'threshold', 'multiscale', 'nterms', 'gridder',
        'deconvolver', 'restoringbeam', 'specmode',
        'stokes', 'mask', 'rmsmap'
        ]
    SLURM_CONFIG_STR_KEYS = [
        'container','mpi_wrapper','partition','time','name',
        'dependencies','exclude','account','reservation'
        ]
    SLURM_CONFIG_KEYS_BASE = [
        'nodes','ntasks_per_node','mem','plane','submit',
        'precal_scripts','postcal_scripts','scripts',
        'verbose','modules'
        ]
    CONTAINER = "/idia/software/containers/casa-6.3.simg"
    MPI_WRAPPER = 'mpirun'
    PRECAL_SCRIPTS = [('calc_refant.py',False,''),('partition.py',True,'')] #Scripts run before calibration at top level directory when nspw > 1
    POSTCAL_SCRIPTS = [
        ('concat.py',False,''),
        ('plotcal_spw.py', False, ''),
        ('selfcal_part1.py',True,''),
        ('selfcal_part2.py',False,''),
        ('science_image.py', True, '')
        ] #Scripts run after calibration at top level directory when nspw > 1
    SCRIPTS = [
        ('validate_input.py',False,''),
        ('flag_round_1.py',True,''),
        ('calc_refant.py',False,''),
        ('setjy.py',True,''),
        ('xx_yy_solve.py',False,''),
        ('xx_yy_apply.py',True,''),
        ('flag_round_2.py',True,''),
        ('xx_yy_solve.py',False,''),
        ('xx_yy_apply.py',True,''),
        ('split.py',True,''),
        ('quick_tclean.py',True,'')
        ]

[galahad]
    # Set global limits for current ilifu cluster configuration
    TOTAL_NODES_LIMIT = 1 ### update me!
    CPUS_PER_NODE_LIMIT = 16
    NTASKS_PER_NODE_LIMIT = %(CPUS_PER_NODE_LIMIT)s
    MEM_PER_NODE_GB_LIMIT = 1000 #237568 MB  ### update me!!!
    MEM_PER_NODE_GB_LIMIT_HIGHMEM = 1300 #491520 MB  ### update me!!!
    ACCOUNTS = [] ### update me!!!

    # Set global values for paths and file names
    LOG_DIR = 'logs'
    CALIB_SCRIPTS_DIR = 'crosscal_scripts'
    AUX_SCRIPTS_DIR = 'aux_scripts'
    SELFCAL_SCRIPTS_DIR = 'selfcal_scripts'
    CONFIG = 'default_config.txt'
    TMP_CONFIG = '.config.tmp'
    MASTER_SCRIPT = 'submit_pipeline.sh'

    # Set global values for field, crosscal and SLURM arguments copied to config file, and some of their default values
    FIELDS_CONFIG_KEYS = [
        'fluxfield','bpassfield','phasecalfield',
        'targetfields','extrafields'
        ]
    CROSSCAL_CONFIG_KEYS = [
        'minbaselines','chanbin','width','timeavg','createmms',
        'keepmms','spw','nspw','calcrefant','refant','standard',
        'badants','badfreqranges'
        ]
    SELFCAL_CONFIG_KEYS = [
        'nloops','loop','cell','robust','imsize','wprojplanes',
        'niter','threshold','uvrange','nterms','gridder','deconvolver',
        'solint','calmode','discard_nloops','gaintype',
        'outlier_threshold','flag'
        ]
    IMAGING_CONFIG_KEYS = [
        'cell', 'robust', 'imsize', 'wprojplanes', 'niter',
        'threshold', 'multiscale', 'nterms', 'gridder',
        'deconvolver', 'restoringbeam', 'specmode',
        'stokes', 'mask', 'rmsmap'
        ]
    SLURM_CONFIG_STR_KEYS = [
        'container','mpi_wrapper','partition','time','name',
        'dependencies','exclude','account','reservation'
        ]
    SLURM_CONFIG_KEYS_BASE = [
        'nodes','ntasks_per_node','mem','plane','submit',
        'precal_scripts','postcal_scripts','scripts',
        'verbose','modules'
        ]
    CONTAINER = '/share/nas/mbowles/mightee/casa-stable.simg'
    MPI_WRAPPER = %(CONTAINER)s # Fairly certain this shouldnt work, but it might. I.e. should probably still reference mpirun somehow.
    PRECAL_SCRIPTS = [('calc_refant.py',False,''),('partition.py',True,'')] #Scripts run before calibration at top level directory when nspw > 1
    POSTCAL_SCRIPTS = [
        ('concat.py',False,''),
        ('plotcal_spw.py', False, ''),
        ('selfcal_part1.py',True,''),
        ('selfcal_part2.py',False,''),
        ('science_image.py', True, '')
        ] #Scripts run after calibration at top level directory when nspw > 1
    SCRIPTS = [
        ('validate_input.py',False,''),
        ('flag_round_1.py',True,''),
        ('calc_refant.py',False,''),
        ('setjy.py',True,''),
        ('xx_yy_solve.py',False,''),
        ('xx_yy_apply.py',True,''),
        ('flag_round_2.py',True,''),
        ('xx_yy_solve.py',False,''),
        ('xx_yy_apply.py',True,''),
        ('split.py',True,''),
        ('quick_tclean.py',True,'')
        ]
